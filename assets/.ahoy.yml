---
ahoyapi: v2

commands:
  up:
    usage: Build project.
    cmd: |
      docker-compose up -d "$@" &&
      docker-compose exec -T test dockerize -wait tcp://mariadb:3306 -timeout 2m &&
      ahoy info;

  down:
    usage: Delete project (CAUTION).
    cmd: |
      if [ "$1" == "y" ]; then
        docker-compose down --volumes
      else
        ahoy confirm "Running this command will destroy your current site, database and build? Are you sure you didn't mean ahoy stop?" &&
        # Run this if confirm returns true
        docker-compose down --volumes ||
        # Run this if confirm returns false
        echo "OK, probably a wise choice..."
      fi

  build:
    usage: Build project.
    cmd: |
      docker-compose up -d --build "$@" &&
      docker-compose exec -T test dockerize -wait tcp://mariadb:3306 -timeout 2m &&
      ahoy info;

  cli:
    usage: Start a shell inside cli container.
    cmd: docker-compose exec cli bash

  run:
    usage: Run command inside cli container.
    cmd: docker-compose exec -T cli bash -c "$*"

  drush:
    usage: Run drush commands in cli container.
    cmd: docker-compose exec -T cli drush "$@"

  logs:
    usage: Show Docker logs.
    cmd: docker-compose logs "$@"

  restart:
    usage: Restart Docker containers.
    cmd: docker-compose restart

  stop:
    usage: Stop Docker containers.
    cmd: docker-compose stop "$@"

  mysql-import:
    usage: Pipe in a sql file.  `ahoy mysql-import local.sql`
    cmd: |
      if [ -e "$@" ] ; then
        docker-compose exec cli bash -c 'drush sql-drop' &&
        docker-compose exec -T cli bash -c 'drush sql-cli' < "$@"
      else echo "Provided sql file" "$@" "does not exist"
      fi

  mysql-dump:
    usage: Dump data out into a file. `ahoy mysql-dump local.sql`
    cmd: docker-compose exec -T cli bash -c 'drush sql-dump --ordered-dump' > "$@"

  info:
    usage: Print information about this project.
    cmd: |
      echo "Site local URL           : " $(ahoy run "echo \$LAGOON_ROUTE")
      echo "DB port on host          : " $(docker port $(docker-compose ps -q mariadb) 3306 | cut -d : -f 2)
      if [ "$1" ]; then
        echo "One-time login           : " $(ahoy login -- --no-browser)
      fi

  confirm:
    cmd: read -r -p "${@} [y/N] " response; [ ${response} = "y" ]
    hide: true
